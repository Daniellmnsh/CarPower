@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using CLOD.ProjectWork.Data
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using CLOD.ProjectWork.Entities;
@inject HttpClient HttpClient
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext DbContext  // Inject ApplicationDbContext
@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<div id="map" style="height: 700px;"></div>

@code {
    private List<ChargingStation> chargingStations = new List<ChargingStation>();

    private bool isAuthenticated;
    private ApplicationUser currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity?.IsAuthenticated ?? true)
        {
            // User not authenticated, redirect to login page
            Navigation.NavigateTo("/Account/Login", true);
        }
        else
        {
            var userId = DbContext.Users
                .Where(u => u.UserName == user.Identity.Name)
                .Select(u => u.Id)
                .FirstOrDefault();

            if (userId != null)
            {
                currentUser = await UserManager.FindByIdAsync(userId);
                //await LoadUserBalance(userId);
                isAuthenticated = true;
            }
        }
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            chargingStations = await HttpClient.GetFromJsonAsync<List<ChargingStation>>("api/ChargingStations");
            await JSRuntime.InvokeVoidAsync("initializeMap", chargingStations);
        }
    }

    public class ChargingStation
    {
        public int Id { get; set; }
        public string Address { get; set; }
        public double Longitude { get; set; }
        public double Latitude { get; set; }
        public bool IsActive { get; set; }
        public bool HasFastCharge { get; set; }
        public decimal KwPrice { get; set; }
    }
}