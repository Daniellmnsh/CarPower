@page "/gestioneutenti"
@inject HttpClient Http
@inject NavigationManager Navigation
@using CLOD.ProjectWork.Entities

<div class="mb-3"></div>

<button class="btn btn-primary" @onclick="AddNewUser">Aggiungi utente</button>

<div class="mb-3"></div>

@if (users == null)
{
    <p class="text-center">Loading...</p>
}
else
{
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th scope="col">NOME</th>
                <th scope="col">COGNOME</th>
                <th scope="col">TARGA</th>
                <th scope="col">ADMIN</th>
                <th scope="col">USERNAME</th>
                <th scope="col">EMAIL</th>
                <th scope="col">TELEFONO</th>
                <th scope="col">ELIMINA</th>
                <th scope="col">AZIONI</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Surname</td>
                    <td>@user.Plate</td>
                    <td style="background-color: @(user.IsAdmin ? "green" : "gray"); color: white;">
                        @(user.IsAdmin ? "Si" : "No")
                    </td>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                    <td>@user.Phone</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => ShowDeleteModal(user)">Elimina</button>
                    </td>
                    <td>
                        <!-- Add other actions if necessary -->
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Modal di conferma per eliminazione -->
<div class="modal" style="display: @(ShowDeleteModalFlag ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Conferma Eliminazione</h5>
                <button type="button" class="close" aria-label="Close" @onclick="HideDeleteModal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Sei sicuro di voler eliminare l'utente?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="HideDeleteModal">Annulla</button>
                <button type="button" class="btn btn-danger" @onclick="DeleteConfirmed">Elimina</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<User> users;
    private User userToDelete;
    private bool ShowDeleteModalFlag { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            users = await Http.GetFromJsonAsync<List<User>>("api/User");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading users: " + ex.Message);
        }
    }

    private void AddNewUser()
    {
        Navigation.NavigateTo("/adduser");
    }

    private void ShowDeleteModal(User user)
    {
        userToDelete = user;
        ShowDeleteModalFlag = true;
    }

    private void HideDeleteModal()
    {
        ShowDeleteModalFlag = false;
    }

    private async Task DeleteConfirmed()
    {
        try
        {
            var response = await Http.DeleteAsync($"api/User/{userToDelete.Id}");
            response.EnsureSuccessStatusCode();
            users.RemoveAll(u => u.Id == userToDelete.Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error deleting user: " + ex.Message);
        }
        finally
        {
            HideDeleteModal();
        }
    }
}
